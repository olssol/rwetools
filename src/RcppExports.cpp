// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <RcppEigen.h>
#include <Rcpp.h>

using namespace Rcpp;

// c_get_ps
NumericVector c_get_ps(NumericVector beta, NumericMatrix mat_x, double tol);
RcppExport SEXP _rwetools_c_get_ps(SEXP betaSEXP, SEXP mat_xSEXP, SEXP tolSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericVector >::type beta(betaSEXP);
    Rcpp::traits::input_parameter< NumericMatrix >::type mat_x(mat_xSEXP);
    Rcpp::traits::input_parameter< double >::type tol(tolSEXP);
    rcpp_result_gen = Rcpp::wrap(c_get_ps(beta, mat_x, tol));
    return rcpp_result_gen;
END_RCPP
}
// crtTest
double crtTest(double test);
RcppExport SEXP _rwetools_crtTest(SEXP testSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< double >::type test(testSEXP);
    rcpp_result_gen = Rcpp::wrap(crtTest(test));
    return rcpp_result_gen;
END_RCPP
}
// cMatch
NumericVector cMatch(NumericVector target, NumericVector candidate, int ratio);
RcppExport SEXP _rwetools_cMatch(SEXP targetSEXP, SEXP candidateSEXP, SEXP ratioSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericVector >::type target(targetSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type candidate(candidateSEXP);
    Rcpp::traits::input_parameter< int >::type ratio(ratioSEXP);
    rcpp_result_gen = Rcpp::wrap(cMatch(target, candidate, ratio));
    return rcpp_result_gen;
END_RCPP
}
// c_ps_gmm_g
NumericMatrix c_ps_gmm_g(NumericVector beta, NumericMatrix mat_grp_x, bool att);
RcppExport SEXP _rwetools_c_ps_gmm_g(SEXP betaSEXP, SEXP mat_grp_xSEXP, SEXP attSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericVector >::type beta(betaSEXP);
    Rcpp::traits::input_parameter< NumericMatrix >::type mat_grp_x(mat_grp_xSEXP);
    Rcpp::traits::input_parameter< bool >::type att(attSEXP);
    rcpp_result_gen = Rcpp::wrap(c_ps_gmm_g(beta, mat_grp_x, att));
    return rcpp_result_gen;
END_RCPP
}
// c_ps_gmm_gbar
NumericVector c_ps_gmm_gbar(NumericVector beta, NumericMatrix mat_x, NumericVector ps, IntegerVector mgrp, NumericVector mz, NumericVector mr, NumericVector n3);
RcppExport SEXP _rwetools_c_ps_gmm_gbar(SEXP betaSEXP, SEXP mat_xSEXP, SEXP psSEXP, SEXP mgrpSEXP, SEXP mzSEXP, SEXP mrSEXP, SEXP n3SEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericVector >::type beta(betaSEXP);
    Rcpp::traits::input_parameter< NumericMatrix >::type mat_x(mat_xSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type ps(psSEXP);
    Rcpp::traits::input_parameter< IntegerVector >::type mgrp(mgrpSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type mz(mzSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type mr(mrSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type n3(n3SEXP);
    rcpp_result_gen = Rcpp::wrap(c_ps_gmm_gbar(beta, mat_x, ps, mgrp, mz, mr, n3));
    return rcpp_result_gen;
END_RCPP
}
// c_ps_gmm_sigma
NumericMatrix c_ps_gmm_sigma(NumericVector beta, NumericMatrix mat_x, NumericVector ps, IntegerVector mgrp, NumericVector mz, NumericVector mr, NumericVector n3);
RcppExport SEXP _rwetools_c_ps_gmm_sigma(SEXP betaSEXP, SEXP mat_xSEXP, SEXP psSEXP, SEXP mgrpSEXP, SEXP mzSEXP, SEXP mrSEXP, SEXP n3SEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericVector >::type beta(betaSEXP);
    Rcpp::traits::input_parameter< NumericMatrix >::type mat_x(mat_xSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type ps(psSEXP);
    Rcpp::traits::input_parameter< IntegerVector >::type mgrp(mgrpSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type mz(mzSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type mr(mrSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type n3(n3SEXP);
    rcpp_result_gen = Rcpp::wrap(c_ps_gmm_sigma(beta, mat_x, ps, mgrp, mz, mr, n3));
    return rcpp_result_gen;
END_RCPP
}
// c_ps_gmm_dg
NumericMatrix c_ps_gmm_dg(NumericVector beta, NumericMatrix mat_grp_x, bool att);
RcppExport SEXP _rwetools_c_ps_gmm_dg(SEXP betaSEXP, SEXP mat_grp_xSEXP, SEXP attSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericVector >::type beta(betaSEXP);
    Rcpp::traits::input_parameter< NumericMatrix >::type mat_grp_x(mat_grp_xSEXP);
    Rcpp::traits::input_parameter< bool >::type att(attSEXP);
    rcpp_result_gen = Rcpp::wrap(c_ps_gmm_dg(beta, mat_grp_x, att));
    return rcpp_result_gen;
END_RCPP
}

static const R_CallMethodDef CallEntries[] = {
    {"_rwetools_c_get_ps", (DL_FUNC) &_rwetools_c_get_ps, 3},
    {"_rwetools_crtTest", (DL_FUNC) &_rwetools_crtTest, 1},
    {"_rwetools_cMatch", (DL_FUNC) &_rwetools_cMatch, 3},
    {"_rwetools_c_ps_gmm_g", (DL_FUNC) &_rwetools_c_ps_gmm_g, 3},
    {"_rwetools_c_ps_gmm_gbar", (DL_FUNC) &_rwetools_c_ps_gmm_gbar, 7},
    {"_rwetools_c_ps_gmm_sigma", (DL_FUNC) &_rwetools_c_ps_gmm_sigma, 7},
    {"_rwetools_c_ps_gmm_dg", (DL_FUNC) &_rwetools_c_ps_gmm_dg, 3},
    {NULL, NULL, 0}
};

void my_package_init(DllInfo *dll);
RcppExport void R_init_rwetools(DllInfo *dll) {
    R_registerRoutines(dll, NULL, CallEntries, NULL, NULL);
    R_useDynamicSymbols(dll, FALSE);
    my_package_init(dll);
}
